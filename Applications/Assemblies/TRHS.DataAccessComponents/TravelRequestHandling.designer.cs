#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TRHS.DataAccessComponents
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TRHS")]
	public partial class TravelRequestHandlingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttCompanyDetail(tCompanyDetail instance);
    partial void UpdatetCompanyDetail(tCompanyDetail instance);
    partial void DeletetCompanyDetail(tCompanyDetail instance);
    partial void InserttDepartment(tDepartment instance);
    partial void UpdatetDepartment(tDepartment instance);
    partial void DeletetDepartment(tDepartment instance);
    partial void InserttDesignation(tDesignation instance);
    partial void UpdatetDesignation(tDesignation instance);
    partial void DeletetDesignation(tDesignation instance);
    partial void InserttEmployeeAccessRight(tEmployeeAccessRight instance);
    partial void UpdatetEmployeeAccessRight(tEmployeeAccessRight instance);
    partial void DeletetEmployeeAccessRight(tEmployeeAccessRight instance);
    partial void InserttEmployeeDetail(tEmployeeDetail instance);
    partial void UpdatetEmployeeDetail(tEmployeeDetail instance);
    partial void DeletetEmployeeDetail(tEmployeeDetail instance);
    partial void InserttEmployeeRole(tEmployeeRole instance);
    partial void UpdatetEmployeeRole(tEmployeeRole instance);
    partial void DeletetEmployeeRole(tEmployeeRole instance);
    partial void InserttEmployeeTravelMode(tEmployeeTravelMode instance);
    partial void UpdatetEmployeeTravelMode(tEmployeeTravelMode instance);
    partial void DeletetEmployeeTravelMode(tEmployeeTravelMode instance);
    partial void InserttLogin(tLogin instance);
    partial void UpdatetLogin(tLogin instance);
    partial void DeletetLogin(tLogin instance);
    partial void InserttTravelLog(tTravelLog instance);
    partial void UpdatetTravelLog(tTravelLog instance);
    partial void DeletetTravelLog(tTravelLog instance);
    partial void InserttTravelMode(tTravelMode instance);
    partial void UpdatetTravelMode(tTravelMode instance);
    partial void DeletetTravelMode(tTravelMode instance);
    partial void InserttTravelRequestComment(tTravelRequestComment instance);
    partial void UpdatetTravelRequestComment(tTravelRequestComment instance);
    partial void DeletetTravelRequestComment(tTravelRequestComment instance);
    partial void InserttTravelRequestMaster(tTravelRequestMaster instance);
    partial void UpdatetTravelRequestMaster(tTravelRequestMaster instance);
    partial void DeletetTravelRequestMaster(tTravelRequestMaster instance);
    partial void InserttTravelRequestStatus(tTravelRequestStatus instance);
    partial void UpdatetTravelRequestStatus(tTravelRequestStatus instance);
    partial void DeletetTravelRequestStatus(tTravelRequestStatus instance);
    partial void InserttTravelRequestVersion(tTravelRequestVersion instance);
    partial void UpdatetTravelRequestVersion(tTravelRequestVersion instance);
    partial void DeletetTravelRequestVersion(tTravelRequestVersion instance);
    #endregion
		
		public TravelRequestHandlingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TravelRequestHandlingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TravelRequestHandlingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TravelRequestHandlingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tCompanyDetail> tCompanyDetails
		{
			get
			{
				return this.GetTable<tCompanyDetail>();
			}
		}
		
		public System.Data.Linq.Table<tDepartment> tDepartments
		{
			get
			{
				return this.GetTable<tDepartment>();
			}
		}
		
		public System.Data.Linq.Table<tDesignation> tDesignations
		{
			get
			{
				return this.GetTable<tDesignation>();
			}
		}
		
		public System.Data.Linq.Table<tEmployeeAccessRight> tEmployeeAccessRights
		{
			get
			{
				return this.GetTable<tEmployeeAccessRight>();
			}
		}
		
		public System.Data.Linq.Table<tEmployeeDetail> tEmployeeDetails
		{
			get
			{
				return this.GetTable<tEmployeeDetail>();
			}
		}
		
		public System.Data.Linq.Table<tEmployeeRole> tEmployeeRoles
		{
			get
			{
				return this.GetTable<tEmployeeRole>();
			}
		}
		
		public System.Data.Linq.Table<tEmployeeTravelMode> tEmployeeTravelModes
		{
			get
			{
				return this.GetTable<tEmployeeTravelMode>();
			}
		}
		
		public System.Data.Linq.Table<tLogin> tLogins
		{
			get
			{
				return this.GetTable<tLogin>();
			}
		}
		
		public System.Data.Linq.Table<tTravelLog> tTravelLogs
		{
			get
			{
				return this.GetTable<tTravelLog>();
			}
		}
		
		public System.Data.Linq.Table<tTravelMode> tTravelModes
		{
			get
			{
				return this.GetTable<tTravelMode>();
			}
		}
		
		public System.Data.Linq.Table<tTravelRequestComment> tTravelRequestComments
		{
			get
			{
				return this.GetTable<tTravelRequestComment>();
			}
		}
		
		public System.Data.Linq.Table<tTravelRequestMaster> tTravelRequestMasters
		{
			get
			{
				return this.GetTable<tTravelRequestMaster>();
			}
		}
		
		public System.Data.Linq.Table<tTravelRequestStatus> tTravelRequestStatus
		{
			get
			{
				return this.GetTable<tTravelRequestStatus>();
			}
		}
		
		public System.Data.Linq.Table<tTravelRequestVersion> tTravelRequestVersions
		{
			get
			{
				return this.GetTable<tTravelRequestVersion>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tCompanyDetails")]
	public partial class tCompanyDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _CompanyId;
		
		private string _CompanyName;
		
		private string _CompanyUrl;
		
		private string _CompanyAddress;
		
		private string _CompanyPhone;
		
		private string _CompanyFax;
		
		private System.DateTime _ActionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCompanyIdChanging(System.Guid value);
    partial void OnCompanyIdChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyUrlChanging(string value);
    partial void OnCompanyUrlChanged();
    partial void OnCompanyAddressChanging(string value);
    partial void OnCompanyAddressChanged();
    partial void OnCompanyPhoneChanging(string value);
    partial void OnCompanyPhoneChanged();
    partial void OnCompanyFaxChanging(string value);
    partial void OnCompanyFaxChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tCompanyDetail()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid CompanyId
		{
			get
			{
				return this._CompanyId;
			}
			set
			{
				if ((this._CompanyId != value))
				{
					this.OnCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._CompanyId = value;
					this.SendPropertyChanged("CompanyId");
					this.OnCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyUrl", DbType="VarChar(200)")]
		public string CompanyUrl
		{
			get
			{
				return this._CompanyUrl;
			}
			set
			{
				if ((this._CompanyUrl != value))
				{
					this.OnCompanyUrlChanging(value);
					this.SendPropertyChanging();
					this._CompanyUrl = value;
					this.SendPropertyChanged("CompanyUrl");
					this.OnCompanyUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyAddress", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
		public string CompanyAddress
		{
			get
			{
				return this._CompanyAddress;
			}
			set
			{
				if ((this._CompanyAddress != value))
				{
					this.OnCompanyAddressChanging(value);
					this.SendPropertyChanging();
					this._CompanyAddress = value;
					this.SendPropertyChanged("CompanyAddress");
					this.OnCompanyAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyPhone", DbType="VarChar(30)")]
		public string CompanyPhone
		{
			get
			{
				return this._CompanyPhone;
			}
			set
			{
				if ((this._CompanyPhone != value))
				{
					this.OnCompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyPhone = value;
					this.SendPropertyChanged("CompanyPhone");
					this.OnCompanyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyFax", DbType="VarChar(30)")]
		public string CompanyFax
		{
			get
			{
				return this._CompanyFax;
			}
			set
			{
				if ((this._CompanyFax != value))
				{
					this.OnCompanyFaxChanging(value);
					this.SendPropertyChanging();
					this._CompanyFax = value;
					this.SendPropertyChanged("CompanyFax");
					this.OnCompanyFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDepartments")]
	public partial class tDepartment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DepartmentId;
		
		private string _DepartmentName;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tEmployeeDetail> _tEmployeeDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDepartmentIdChanging(System.Guid value);
    partial void OnDepartmentIdChanged();
    partial void OnDepartmentNameChanging(string value);
    partial void OnDepartmentNameChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tDepartment()
		{
			this._tEmployeeDetails = new EntitySet<tEmployeeDetail>(new Action<tEmployeeDetail>(this.attach_tEmployeeDetails), new Action<tEmployeeDetail>(this.detach_tEmployeeDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DepartmentName
		{
			get
			{
				return this._DepartmentName;
			}
			set
			{
				if ((this._DepartmentName != value))
				{
					this.OnDepartmentNameChanging(value);
					this.SendPropertyChanging();
					this._DepartmentName = value;
					this.SendPropertyChanged("DepartmentName");
					this.OnDepartmentNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDepartment_tEmployeeDetail", Storage="_tEmployeeDetails", ThisKey="DepartmentId", OtherKey="DepartmentId")]
		public EntitySet<tEmployeeDetail> tEmployeeDetails
		{
			get
			{
				return this._tEmployeeDetails;
			}
			set
			{
				this._tEmployeeDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tEmployeeDetails(tEmployeeDetail entity)
		{
			this.SendPropertyChanging();
			entity.tDepartment = this;
		}
		
		private void detach_tEmployeeDetails(tEmployeeDetail entity)
		{
			this.SendPropertyChanging();
			entity.tDepartment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tDesignation")]
	public partial class tDesignation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _DesignationId;
		
		private string _DesignationName;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tEmployeeDetail> _tEmployeeDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDesignationIdChanging(System.Guid value);
    partial void OnDesignationIdChanged();
    partial void OnDesignationNameChanging(string value);
    partial void OnDesignationNameChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tDesignation()
		{
			this._tEmployeeDetails = new EntitySet<tEmployeeDetail>(new Action<tEmployeeDetail>(this.attach_tEmployeeDetails), new Action<tEmployeeDetail>(this.detach_tEmployeeDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid DesignationId
		{
			get
			{
				return this._DesignationId;
			}
			set
			{
				if ((this._DesignationId != value))
				{
					this.OnDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._DesignationId = value;
					this.SendPropertyChanged("DesignationId");
					this.OnDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string DesignationName
		{
			get
			{
				return this._DesignationName;
			}
			set
			{
				if ((this._DesignationName != value))
				{
					this.OnDesignationNameChanging(value);
					this.SendPropertyChanging();
					this._DesignationName = value;
					this.SendPropertyChanged("DesignationName");
					this.OnDesignationNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDesignation_tEmployeeDetail", Storage="_tEmployeeDetails", ThisKey="DesignationId", OtherKey="DesignationId")]
		public EntitySet<tEmployeeDetail> tEmployeeDetails
		{
			get
			{
				return this._tEmployeeDetails;
			}
			set
			{
				this._tEmployeeDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tEmployeeDetails(tEmployeeDetail entity)
		{
			this.SendPropertyChanging();
			entity.tDesignation = this;
		}
		
		private void detach_tEmployeeDetails(tEmployeeDetail entity)
		{
			this.SendPropertyChanging();
			entity.tDesignation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeeAccessRights")]
	public partial class tEmployeeAccessRight : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmployeeAccessRightsId;
		
		private System.Guid _EmployeeDetailsId;
		
		private System.Guid _EmployeeRoleId;
		
		private System.DateTime _ActionDate;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail;
		
		private EntityRef<tEmployeeRole> _tEmployeeRole;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeAccessRightsIdChanging(System.Guid value);
    partial void OnEmployeeAccessRightsIdChanged();
    partial void OnEmployeeDetailsIdChanging(System.Guid value);
    partial void OnEmployeeDetailsIdChanged();
    partial void OnEmployeeRoleIdChanging(System.Guid value);
    partial void OnEmployeeRoleIdChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tEmployeeAccessRight()
		{
			this._tEmployeeDetail = default(EntityRef<tEmployeeDetail>);
			this._tEmployeeRole = default(EntityRef<tEmployeeRole>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeAccessRightsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmployeeAccessRightsId
		{
			get
			{
				return this._EmployeeAccessRightsId;
			}
			set
			{
				if ((this._EmployeeAccessRightsId != value))
				{
					this.OnEmployeeAccessRightsIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeAccessRightsId = value;
					this.SendPropertyChanged("EmployeeAccessRightsId");
					this.OnEmployeeAccessRightsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDetailsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeDetailsId
		{
			get
			{
				return this._EmployeeDetailsId;
			}
			set
			{
				if ((this._EmployeeDetailsId != value))
				{
					if (this._tEmployeeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDetailsId = value;
					this.SendPropertyChanged("EmployeeDetailsId");
					this.OnEmployeeDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeRoleId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeRoleId
		{
			get
			{
				return this._EmployeeRoleId;
			}
			set
			{
				if ((this._EmployeeRoleId != value))
				{
					if (this._tEmployeeRole.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeRoleIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeRoleId = value;
					this.SendPropertyChanged("EmployeeRoleId");
					this.OnEmployeeRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tEmployeeAccessRight", Storage="_tEmployeeDetail", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail
		{
			get
			{
				return this._tEmployeeDetail.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail.Entity = null;
						previousValue.tEmployeeAccessRights.Remove(this);
					}
					this._tEmployeeDetail.Entity = value;
					if ((value != null))
					{
						value.tEmployeeAccessRights.Add(this);
						this._EmployeeDetailsId = value.EmployeeDetailsId;
					}
					else
					{
						this._EmployeeDetailsId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeRole_tEmployeeAccessRight", Storage="_tEmployeeRole", ThisKey="EmployeeRoleId", OtherKey="EmployeeRoleId", IsForeignKey=true)]
		public tEmployeeRole tEmployeeRole
		{
			get
			{
				return this._tEmployeeRole.Entity;
			}
			set
			{
				tEmployeeRole previousValue = this._tEmployeeRole.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeRole.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeRole.Entity = null;
						previousValue.tEmployeeAccessRights.Remove(this);
					}
					this._tEmployeeRole.Entity = value;
					if ((value != null))
					{
						value.tEmployeeAccessRights.Add(this);
						this._EmployeeRoleId = value.EmployeeRoleId;
					}
					else
					{
						this._EmployeeRoleId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeRole");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeeDetails")]
	public partial class tEmployeeDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmployeeDetailsId;
		
		private string _EmployeeId;
		
		private string _EmployeeName;
		
		private string _EmployeeShortName;
		
		private string _EmailId;
		
		private string _MobileNumber;
		
		private string _LandlineNumber;
		
		private string _ExtnNumber;
		
		private System.DateTime _DateOfBirth;
		
		private System.Guid _DesignationId;
		
		private System.Guid _DepartmentId;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tEmployeeAccessRight> _tEmployeeAccessRights;
		
		private EntitySet<tEmployeeTravelMode> _tEmployeeTravelModes;
		
		private EntitySet<tLogin> _tLogins;
		
		private EntitySet<tTravelRequestComment> _tTravelRequestComments;
		
		private EntitySet<tTravelRequestComment> _tTravelRequestComments1;
		
		private EntitySet<tTravelRequestMaster> _tTravelRequestMasters;
		
		private EntitySet<tTravelRequestVersion> _tTravelRequestVersions;
		
		private EntityRef<tDepartment> _tDepartment;
		
		private EntityRef<tDesignation> _tDesignation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeDetailsIdChanging(System.Guid value);
    partial void OnEmployeeDetailsIdChanged();
    partial void OnEmployeeIdChanging(string value);
    partial void OnEmployeeIdChanged();
    partial void OnEmployeeNameChanging(string value);
    partial void OnEmployeeNameChanged();
    partial void OnEmployeeShortNameChanging(string value);
    partial void OnEmployeeShortNameChanged();
    partial void OnEmailIdChanging(string value);
    partial void OnEmailIdChanged();
    partial void OnMobileNumberChanging(string value);
    partial void OnMobileNumberChanged();
    partial void OnLandlineNumberChanging(string value);
    partial void OnLandlineNumberChanged();
    partial void OnExtnNumberChanging(string value);
    partial void OnExtnNumberChanged();
    partial void OnDateOfBirthChanging(System.DateTime value);
    partial void OnDateOfBirthChanged();
    partial void OnDesignationIdChanging(System.Guid value);
    partial void OnDesignationIdChanged();
    partial void OnDepartmentIdChanging(System.Guid value);
    partial void OnDepartmentIdChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tEmployeeDetail()
		{
			this._tEmployeeAccessRights = new EntitySet<tEmployeeAccessRight>(new Action<tEmployeeAccessRight>(this.attach_tEmployeeAccessRights), new Action<tEmployeeAccessRight>(this.detach_tEmployeeAccessRights));
			this._tEmployeeTravelModes = new EntitySet<tEmployeeTravelMode>(new Action<tEmployeeTravelMode>(this.attach_tEmployeeTravelModes), new Action<tEmployeeTravelMode>(this.detach_tEmployeeTravelModes));
			this._tLogins = new EntitySet<tLogin>(new Action<tLogin>(this.attach_tLogins), new Action<tLogin>(this.detach_tLogins));
			this._tTravelRequestComments = new EntitySet<tTravelRequestComment>(new Action<tTravelRequestComment>(this.attach_tTravelRequestComments), new Action<tTravelRequestComment>(this.detach_tTravelRequestComments));
			this._tTravelRequestComments1 = new EntitySet<tTravelRequestComment>(new Action<tTravelRequestComment>(this.attach_tTravelRequestComments1), new Action<tTravelRequestComment>(this.detach_tTravelRequestComments1));
			this._tTravelRequestMasters = new EntitySet<tTravelRequestMaster>(new Action<tTravelRequestMaster>(this.attach_tTravelRequestMasters), new Action<tTravelRequestMaster>(this.detach_tTravelRequestMasters));
			this._tTravelRequestVersions = new EntitySet<tTravelRequestVersion>(new Action<tTravelRequestVersion>(this.attach_tTravelRequestVersions), new Action<tTravelRequestVersion>(this.detach_tTravelRequestVersions));
			this._tDepartment = default(EntityRef<tDepartment>);
			this._tDesignation = default(EntityRef<tDesignation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDetailsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmployeeDetailsId
		{
			get
			{
				return this._EmployeeDetailsId;
			}
			set
			{
				if ((this._EmployeeDetailsId != value))
				{
					this.OnEmployeeDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDetailsId = value;
					this.SendPropertyChanged("EmployeeDetailsId");
					this.OnEmployeeDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this.OnEmployeeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeId = value;
					this.SendPropertyChanged("EmployeeId");
					this.OnEmployeeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeName", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string EmployeeName
		{
			get
			{
				return this._EmployeeName;
			}
			set
			{
				if ((this._EmployeeName != value))
				{
					this.OnEmployeeNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeName = value;
					this.SendPropertyChanged("EmployeeName");
					this.OnEmployeeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeShortName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string EmployeeShortName
		{
			get
			{
				return this._EmployeeShortName;
			}
			set
			{
				if ((this._EmployeeShortName != value))
				{
					this.OnEmployeeShortNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeShortName = value;
					this.SendPropertyChanged("EmployeeShortName");
					this.OnEmployeeShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmailId", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string EmailId
		{
			get
			{
				return this._EmailId;
			}
			set
			{
				if ((this._EmailId != value))
				{
					this.OnEmailIdChanging(value);
					this.SendPropertyChanging();
					this._EmailId = value;
					this.SendPropertyChanged("EmailId");
					this.OnEmailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileNumber", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string MobileNumber
		{
			get
			{
				return this._MobileNumber;
			}
			set
			{
				if ((this._MobileNumber != value))
				{
					this.OnMobileNumberChanging(value);
					this.SendPropertyChanging();
					this._MobileNumber = value;
					this.SendPropertyChanged("MobileNumber");
					this.OnMobileNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LandlineNumber", DbType="VarChar(20)")]
		public string LandlineNumber
		{
			get
			{
				return this._LandlineNumber;
			}
			set
			{
				if ((this._LandlineNumber != value))
				{
					this.OnLandlineNumberChanging(value);
					this.SendPropertyChanging();
					this._LandlineNumber = value;
					this.SendPropertyChanged("LandlineNumber");
					this.OnLandlineNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtnNumber", DbType="VarChar(20)")]
		public string ExtnNumber
		{
			get
			{
				return this._ExtnNumber;
			}
			set
			{
				if ((this._ExtnNumber != value))
				{
					this.OnExtnNumberChanging(value);
					this.SendPropertyChanging();
					this._ExtnNumber = value;
					this.SendPropertyChanged("ExtnNumber");
					this.OnExtnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateOfBirth", DbType="DateTime NOT NULL")]
		public System.DateTime DateOfBirth
		{
			get
			{
				return this._DateOfBirth;
			}
			set
			{
				if ((this._DateOfBirth != value))
				{
					this.OnDateOfBirthChanging(value);
					this.SendPropertyChanging();
					this._DateOfBirth = value;
					this.SendPropertyChanged("DateOfBirth");
					this.OnDateOfBirthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DesignationId
		{
			get
			{
				return this._DesignationId;
			}
			set
			{
				if ((this._DesignationId != value))
				{
					if (this._tDesignation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationIdChanging(value);
					this.SendPropertyChanging();
					this._DesignationId = value;
					this.SendPropertyChanged("DesignationId");
					this.OnDesignationIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DepartmentId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid DepartmentId
		{
			get
			{
				return this._DepartmentId;
			}
			set
			{
				if ((this._DepartmentId != value))
				{
					if (this._tDepartment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDepartmentIdChanging(value);
					this.SendPropertyChanging();
					this._DepartmentId = value;
					this.SendPropertyChanged("DepartmentId");
					this.OnDepartmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tEmployeeAccessRight", Storage="_tEmployeeAccessRights", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId")]
		public EntitySet<tEmployeeAccessRight> tEmployeeAccessRights
		{
			get
			{
				return this._tEmployeeAccessRights;
			}
			set
			{
				this._tEmployeeAccessRights.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tEmployeeTravelMode", Storage="_tEmployeeTravelModes", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId")]
		public EntitySet<tEmployeeTravelMode> tEmployeeTravelModes
		{
			get
			{
				return this._tEmployeeTravelModes;
			}
			set
			{
				this._tEmployeeTravelModes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tLogin", Storage="_tLogins", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId")]
		public EntitySet<tLogin> tLogins
		{
			get
			{
				return this._tLogins;
			}
			set
			{
				this._tLogins.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestComment", Storage="_tTravelRequestComments", ThisKey="EmployeeDetailsId", OtherKey="ReceiverId")]
		public EntitySet<tTravelRequestComment> tTravelRequestComments
		{
			get
			{
				return this._tTravelRequestComments;
			}
			set
			{
				this._tTravelRequestComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestComment1", Storage="_tTravelRequestComments1", ThisKey="EmployeeDetailsId", OtherKey="SenderId")]
		public EntitySet<tTravelRequestComment> tTravelRequestComments1
		{
			get
			{
				return this._tTravelRequestComments1;
			}
			set
			{
				this._tTravelRequestComments1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestMaster", Storage="_tTravelRequestMasters", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId")]
		public EntitySet<tTravelRequestMaster> tTravelRequestMasters
		{
			get
			{
				return this._tTravelRequestMasters;
			}
			set
			{
				this._tTravelRequestMasters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestVersion", Storage="_tTravelRequestVersions", ThisKey="EmployeeDetailsId", OtherKey="TravelApproverId")]
		public EntitySet<tTravelRequestVersion> tTravelRequestVersions
		{
			get
			{
				return this._tTravelRequestVersions;
			}
			set
			{
				this._tTravelRequestVersions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDepartment_tEmployeeDetail", Storage="_tDepartment", ThisKey="DepartmentId", OtherKey="DepartmentId", IsForeignKey=true)]
		public tDepartment tDepartment
		{
			get
			{
				return this._tDepartment.Entity;
			}
			set
			{
				tDepartment previousValue = this._tDepartment.Entity;
				if (((previousValue != value) 
							|| (this._tDepartment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tDepartment.Entity = null;
						previousValue.tEmployeeDetails.Remove(this);
					}
					this._tDepartment.Entity = value;
					if ((value != null))
					{
						value.tEmployeeDetails.Add(this);
						this._DepartmentId = value.DepartmentId;
					}
					else
					{
						this._DepartmentId = default(System.Guid);
					}
					this.SendPropertyChanged("tDepartment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tDesignation_tEmployeeDetail", Storage="_tDesignation", ThisKey="DesignationId", OtherKey="DesignationId", IsForeignKey=true)]
		public tDesignation tDesignation
		{
			get
			{
				return this._tDesignation.Entity;
			}
			set
			{
				tDesignation previousValue = this._tDesignation.Entity;
				if (((previousValue != value) 
							|| (this._tDesignation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tDesignation.Entity = null;
						previousValue.tEmployeeDetails.Remove(this);
					}
					this._tDesignation.Entity = value;
					if ((value != null))
					{
						value.tEmployeeDetails.Add(this);
						this._DesignationId = value.DesignationId;
					}
					else
					{
						this._DesignationId = default(System.Guid);
					}
					this.SendPropertyChanged("tDesignation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tEmployeeAccessRights(tEmployeeAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = this;
		}
		
		private void detach_tEmployeeAccessRights(tEmployeeAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = null;
		}
		
		private void attach_tEmployeeTravelModes(tEmployeeTravelMode entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = this;
		}
		
		private void detach_tEmployeeTravelModes(tEmployeeTravelMode entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = null;
		}
		
		private void attach_tLogins(tLogin entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = this;
		}
		
		private void detach_tLogins(tLogin entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = null;
		}
		
		private void attach_tTravelRequestComments(tTravelRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = this;
		}
		
		private void detach_tTravelRequestComments(tTravelRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = null;
		}
		
		private void attach_tTravelRequestComments1(tTravelRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail1 = this;
		}
		
		private void detach_tTravelRequestComments1(tTravelRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail1 = null;
		}
		
		private void attach_tTravelRequestMasters(tTravelRequestMaster entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = this;
		}
		
		private void detach_tTravelRequestMasters(tTravelRequestMaster entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = null;
		}
		
		private void attach_tTravelRequestVersions(tTravelRequestVersion entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = this;
		}
		
		private void detach_tTravelRequestVersions(tTravelRequestVersion entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeeRoles")]
	public partial class tEmployeeRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmployeeRoleId;
		
		private string _EmployeeRoleName;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tEmployeeAccessRight> _tEmployeeAccessRights;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeRoleIdChanging(System.Guid value);
    partial void OnEmployeeRoleIdChanged();
    partial void OnEmployeeRoleNameChanging(string value);
    partial void OnEmployeeRoleNameChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tEmployeeRole()
		{
			this._tEmployeeAccessRights = new EntitySet<tEmployeeAccessRight>(new Action<tEmployeeAccessRight>(this.attach_tEmployeeAccessRights), new Action<tEmployeeAccessRight>(this.detach_tEmployeeAccessRights));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeRoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmployeeRoleId
		{
			get
			{
				return this._EmployeeRoleId;
			}
			set
			{
				if ((this._EmployeeRoleId != value))
				{
					this.OnEmployeeRoleIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeRoleId = value;
					this.SendPropertyChanged("EmployeeRoleId");
					this.OnEmployeeRoleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeRoleName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string EmployeeRoleName
		{
			get
			{
				return this._EmployeeRoleName;
			}
			set
			{
				if ((this._EmployeeRoleName != value))
				{
					this.OnEmployeeRoleNameChanging(value);
					this.SendPropertyChanging();
					this._EmployeeRoleName = value;
					this.SendPropertyChanged("EmployeeRoleName");
					this.OnEmployeeRoleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeRole_tEmployeeAccessRight", Storage="_tEmployeeAccessRights", ThisKey="EmployeeRoleId", OtherKey="EmployeeRoleId")]
		public EntitySet<tEmployeeAccessRight> tEmployeeAccessRights
		{
			get
			{
				return this._tEmployeeAccessRights;
			}
			set
			{
				this._tEmployeeAccessRights.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tEmployeeAccessRights(tEmployeeAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeRole = this;
		}
		
		private void detach_tEmployeeAccessRights(tEmployeeAccessRight entity)
		{
			this.SendPropertyChanging();
			entity.tEmployeeRole = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tEmployeeTravelModes")]
	public partial class tEmployeeTravelMode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _EmployeeTravelModeId;
		
		private System.Guid _EmployeeDetailsId;
		
		private System.Guid _TravelModeId;
		
		private bool _IsActive;
		
		private System.DateTime _ActionDate;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail;
		
		private EntityRef<tTravelMode> _tTravelMode;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEmployeeTravelModeIdChanging(System.Guid value);
    partial void OnEmployeeTravelModeIdChanged();
    partial void OnEmployeeDetailsIdChanging(System.Guid value);
    partial void OnEmployeeDetailsIdChanged();
    partial void OnTravelModeIdChanging(System.Guid value);
    partial void OnTravelModeIdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tEmployeeTravelMode()
		{
			this._tEmployeeDetail = default(EntityRef<tEmployeeDetail>);
			this._tTravelMode = default(EntityRef<tTravelMode>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeTravelModeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid EmployeeTravelModeId
		{
			get
			{
				return this._EmployeeTravelModeId;
			}
			set
			{
				if ((this._EmployeeTravelModeId != value))
				{
					this.OnEmployeeTravelModeIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeTravelModeId = value;
					this.SendPropertyChanged("EmployeeTravelModeId");
					this.OnEmployeeTravelModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDetailsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeDetailsId
		{
			get
			{
				return this._EmployeeDetailsId;
			}
			set
			{
				if ((this._EmployeeDetailsId != value))
				{
					if (this._tEmployeeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDetailsId = value;
					this.SendPropertyChanged("EmployeeDetailsId");
					this.OnEmployeeDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelModeId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TravelModeId
		{
			get
			{
				return this._TravelModeId;
			}
			set
			{
				if ((this._TravelModeId != value))
				{
					if (this._tTravelMode.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTravelModeIdChanging(value);
					this.SendPropertyChanging();
					this._TravelModeId = value;
					this.SendPropertyChanged("TravelModeId");
					this.OnTravelModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tEmployeeTravelMode", Storage="_tEmployeeDetail", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail
		{
			get
			{
				return this._tEmployeeDetail.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail.Entity = null;
						previousValue.tEmployeeTravelModes.Remove(this);
					}
					this._tEmployeeDetail.Entity = value;
					if ((value != null))
					{
						value.tEmployeeTravelModes.Add(this);
						this._EmployeeDetailsId = value.EmployeeDetailsId;
					}
					else
					{
						this._EmployeeDetailsId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelMode_tEmployeeTravelMode", Storage="_tTravelMode", ThisKey="TravelModeId", OtherKey="TravelModeId", IsForeignKey=true)]
		public tTravelMode tTravelMode
		{
			get
			{
				return this._tTravelMode.Entity;
			}
			set
			{
				tTravelMode previousValue = this._tTravelMode.Entity;
				if (((previousValue != value) 
							|| (this._tTravelMode.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tTravelMode.Entity = null;
						previousValue.tEmployeeTravelModes.Remove(this);
					}
					this._tTravelMode.Entity = value;
					if ((value != null))
					{
						value.tEmployeeTravelModes.Add(this);
						this._TravelModeId = value.TravelModeId;
					}
					else
					{
						this._TravelModeId = default(System.Guid);
					}
					this.SendPropertyChanged("tTravelMode");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tLogin")]
	public partial class tLogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _LoginId;
		
		private string _UserName;
		
		private string _LoginPassword;
		
		private System.Guid _EmployeeDetailsId;
		
		private System.DateTime _LastLoginDate;
		
		private bool _IsRandomPwd;
		
		private bool _IsActive;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginIdChanging(System.Guid value);
    partial void OnLoginIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoginPasswordChanging(string value);
    partial void OnLoginPasswordChanged();
    partial void OnEmployeeDetailsIdChanging(System.Guid value);
    partial void OnEmployeeDetailsIdChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnIsRandomPwdChanging(bool value);
    partial void OnIsRandomPwdChanged();
    partial void OnIsActiveChanging(bool value);
    partial void OnIsActiveChanged();
    #endregion
		
		public tLogin()
		{
			this._tEmployeeDetail = default(EntityRef<tEmployeeDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid LoginId
		{
			get
			{
				return this._LoginId;
			}
			set
			{
				if ((this._LoginId != value))
				{
					this.OnLoginIdChanging(value);
					this.SendPropertyChanging();
					this._LoginId = value;
					this.SendPropertyChanged("LoginId");
					this.OnLoginIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginPassword", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string LoginPassword
		{
			get
			{
				return this._LoginPassword;
			}
			set
			{
				if ((this._LoginPassword != value))
				{
					this.OnLoginPasswordChanging(value);
					this.SendPropertyChanging();
					this._LoginPassword = value;
					this.SendPropertyChanged("LoginPassword");
					this.OnLoginPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDetailsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeDetailsId
		{
			get
			{
				return this._EmployeeDetailsId;
			}
			set
			{
				if ((this._EmployeeDetailsId != value))
				{
					if (this._tEmployeeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDetailsId = value;
					this.SendPropertyChanged("EmployeeDetailsId");
					this.OnEmployeeDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsRandomPwd", DbType="Bit NOT NULL")]
		public bool IsRandomPwd
		{
			get
			{
				return this._IsRandomPwd;
			}
			set
			{
				if ((this._IsRandomPwd != value))
				{
					this.OnIsRandomPwdChanging(value);
					this.SendPropertyChanging();
					this._IsRandomPwd = value;
					this.SendPropertyChanged("IsRandomPwd");
					this.OnIsRandomPwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tLogin", Storage="_tEmployeeDetail", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail
		{
			get
			{
				return this._tEmployeeDetail.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail.Entity = null;
						previousValue.tLogins.Remove(this);
					}
					this._tEmployeeDetail.Entity = value;
					if ((value != null))
					{
						value.tLogins.Add(this);
						this._EmployeeDetailsId = value.EmployeeDetailsId;
					}
					else
					{
						this._EmployeeDetailsId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTravelLog")]
	public partial class tTravelLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TravelLogId;
		
		private string _LogMessage;
		
		private string _DetailException;
		
		private string _InnerException;
		
		private string _ClassName;
		
		private string _MethodName;
		
		private System.DateTime _ActionDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelLogIdChanging(System.Guid value);
    partial void OnTravelLogIdChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnDetailExceptionChanging(string value);
    partial void OnDetailExceptionChanged();
    partial void OnInnerExceptionChanging(string value);
    partial void OnInnerExceptionChanged();
    partial void OnClassNameChanging(string value);
    partial void OnClassNameChanged();
    partial void OnMethodNameChanging(string value);
    partial void OnMethodNameChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tTravelLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelLogId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TravelLogId
		{
			get
			{
				return this._TravelLogId;
			}
			set
			{
				if ((this._TravelLogId != value))
				{
					this.OnTravelLogIdChanging(value);
					this.SendPropertyChanging();
					this._TravelLogId = value;
					this.SendPropertyChanged("TravelLogId");
					this.OnTravelLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DetailException", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string DetailException
		{
			get
			{
				return this._DetailException;
			}
			set
			{
				if ((this._DetailException != value))
				{
					this.OnDetailExceptionChanging(value);
					this.SendPropertyChanging();
					this._DetailException = value;
					this.SendPropertyChanged("DetailException");
					this.OnDetailExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnerException", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string InnerException
		{
			get
			{
				return this._InnerException;
			}
			set
			{
				if ((this._InnerException != value))
				{
					this.OnInnerExceptionChanging(value);
					this.SendPropertyChanging();
					this._InnerException = value;
					this.SendPropertyChanged("InnerException");
					this.OnInnerExceptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClassName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string ClassName
		{
			get
			{
				return this._ClassName;
			}
			set
			{
				if ((this._ClassName != value))
				{
					this.OnClassNameChanging(value);
					this.SendPropertyChanging();
					this._ClassName = value;
					this.SendPropertyChanged("ClassName");
					this.OnClassNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MethodName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MethodName
		{
			get
			{
				return this._MethodName;
			}
			set
			{
				if ((this._MethodName != value))
				{
					this.OnMethodNameChanging(value);
					this.SendPropertyChanging();
					this._MethodName = value;
					this.SendPropertyChanged("MethodName");
					this.OnMethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTravelModes")]
	public partial class tTravelMode : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TravelModeId;
		
		private string _TravelModeName;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tEmployeeTravelMode> _tEmployeeTravelModes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelModeIdChanging(System.Guid value);
    partial void OnTravelModeIdChanged();
    partial void OnTravelModeNameChanging(string value);
    partial void OnTravelModeNameChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tTravelMode()
		{
			this._tEmployeeTravelModes = new EntitySet<tEmployeeTravelMode>(new Action<tEmployeeTravelMode>(this.attach_tEmployeeTravelModes), new Action<tEmployeeTravelMode>(this.detach_tEmployeeTravelModes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelModeId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TravelModeId
		{
			get
			{
				return this._TravelModeId;
			}
			set
			{
				if ((this._TravelModeId != value))
				{
					this.OnTravelModeIdChanging(value);
					this.SendPropertyChanging();
					this._TravelModeId = value;
					this.SendPropertyChanged("TravelModeId");
					this.OnTravelModeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelModeName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string TravelModeName
		{
			get
			{
				return this._TravelModeName;
			}
			set
			{
				if ((this._TravelModeName != value))
				{
					this.OnTravelModeNameChanging(value);
					this.SendPropertyChanging();
					this._TravelModeName = value;
					this.SendPropertyChanged("TravelModeName");
					this.OnTravelModeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelMode_tEmployeeTravelMode", Storage="_tEmployeeTravelModes", ThisKey="TravelModeId", OtherKey="TravelModeId")]
		public EntitySet<tEmployeeTravelMode> tEmployeeTravelModes
		{
			get
			{
				return this._tEmployeeTravelModes;
			}
			set
			{
				this._tEmployeeTravelModes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tEmployeeTravelModes(tEmployeeTravelMode entity)
		{
			this.SendPropertyChanging();
			entity.tTravelMode = this;
		}
		
		private void detach_tEmployeeTravelModes(tEmployeeTravelMode entity)
		{
			this.SendPropertyChanging();
			entity.tTravelMode = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTravelRequestComments")]
	public partial class tTravelRequestComment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TravelRequestCommentsId;
		
		private System.Guid _TravelRequestVersionId;
		
		private System.Guid _SenderId;
		
		private System.Guid _ReceiverId;
		
		private string _Comments;
		
		private System.DateTime _ActionDate;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail1;
		
		private EntityRef<tTravelRequestVersion> _tTravelRequestVersion;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelRequestCommentsIdChanging(System.Guid value);
    partial void OnTravelRequestCommentsIdChanged();
    partial void OnTravelRequestVersionIdChanging(System.Guid value);
    partial void OnTravelRequestVersionIdChanged();
    partial void OnSenderIdChanging(System.Guid value);
    partial void OnSenderIdChanged();
    partial void OnReceiverIdChanging(System.Guid value);
    partial void OnReceiverIdChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tTravelRequestComment()
		{
			this._tEmployeeDetail = default(EntityRef<tEmployeeDetail>);
			this._tEmployeeDetail1 = default(EntityRef<tEmployeeDetail>);
			this._tTravelRequestVersion = default(EntityRef<tTravelRequestVersion>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestCommentsId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TravelRequestCommentsId
		{
			get
			{
				return this._TravelRequestCommentsId;
			}
			set
			{
				if ((this._TravelRequestCommentsId != value))
				{
					this.OnTravelRequestCommentsIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestCommentsId = value;
					this.SendPropertyChanged("TravelRequestCommentsId");
					this.OnTravelRequestCommentsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestVersionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TravelRequestVersionId
		{
			get
			{
				return this._TravelRequestVersionId;
			}
			set
			{
				if ((this._TravelRequestVersionId != value))
				{
					if (this._tTravelRequestVersion.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTravelRequestVersionIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestVersionId = value;
					this.SendPropertyChanged("TravelRequestVersionId");
					this.OnTravelRequestVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SenderId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid SenderId
		{
			get
			{
				return this._SenderId;
			}
			set
			{
				if ((this._SenderId != value))
				{
					if (this._tEmployeeDetail1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSenderIdChanging(value);
					this.SendPropertyChanging();
					this._SenderId = value;
					this.SendPropertyChanged("SenderId");
					this.OnSenderIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReceiverId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid ReceiverId
		{
			get
			{
				return this._ReceiverId;
			}
			set
			{
				if ((this._ReceiverId != value))
				{
					if (this._tEmployeeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnReceiverIdChanging(value);
					this.SendPropertyChanging();
					this._ReceiverId = value;
					this.SendPropertyChanged("ReceiverId");
					this.OnReceiverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(3000) NOT NULL", CanBeNull=false)]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestComment", Storage="_tEmployeeDetail", ThisKey="ReceiverId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail
		{
			get
			{
				return this._tEmployeeDetail.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail.Entity = null;
						previousValue.tTravelRequestComments.Remove(this);
					}
					this._tEmployeeDetail.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestComments.Add(this);
						this._ReceiverId = value.EmployeeDetailsId;
					}
					else
					{
						this._ReceiverId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestComment1", Storage="_tEmployeeDetail1", ThisKey="SenderId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail1
		{
			get
			{
				return this._tEmployeeDetail1.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail1.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail1.Entity = null;
						previousValue.tTravelRequestComments1.Remove(this);
					}
					this._tEmployeeDetail1.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestComments1.Add(this);
						this._SenderId = value.EmployeeDetailsId;
					}
					else
					{
						this._SenderId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelRequestVersion_tTravelRequestComment", Storage="_tTravelRequestVersion", ThisKey="TravelRequestVersionId", OtherKey="TravelRequestVersionId", IsForeignKey=true)]
		public tTravelRequestVersion tTravelRequestVersion
		{
			get
			{
				return this._tTravelRequestVersion.Entity;
			}
			set
			{
				tTravelRequestVersion previousValue = this._tTravelRequestVersion.Entity;
				if (((previousValue != value) 
							|| (this._tTravelRequestVersion.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tTravelRequestVersion.Entity = null;
						previousValue.tTravelRequestComments.Remove(this);
					}
					this._tTravelRequestVersion.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestComments.Add(this);
						this._TravelRequestVersionId = value.TravelRequestVersionId;
					}
					else
					{
						this._TravelRequestVersionId = default(System.Guid);
					}
					this.SendPropertyChanged("tTravelRequestVersion");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTravelRequestMaster")]
	public partial class tTravelRequestMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TravelRequestMasterId;
		
		private int _RequestNumber;
		
		private System.Guid _EmployeeDetailsId;
		
		private string _AttachmentPath;
		
		private System.Guid _TravelRequestStatusId;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tTravelRequestVersion> _tTravelRequestVersions;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail;
		
		private EntityRef<tTravelRequestStatus> _tTravelRequestStatus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelRequestMasterIdChanging(System.Guid value);
    partial void OnTravelRequestMasterIdChanged();
    partial void OnRequestNumberChanging(int value);
    partial void OnRequestNumberChanged();
    partial void OnEmployeeDetailsIdChanging(System.Guid value);
    partial void OnEmployeeDetailsIdChanged();
    partial void OnAttachmentPathChanging(string value);
    partial void OnAttachmentPathChanged();
    partial void OnTravelRequestStatusIdChanging(System.Guid value);
    partial void OnTravelRequestStatusIdChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tTravelRequestMaster()
		{
			this._tTravelRequestVersions = new EntitySet<tTravelRequestVersion>(new Action<tTravelRequestVersion>(this.attach_tTravelRequestVersions), new Action<tTravelRequestVersion>(this.detach_tTravelRequestVersions));
			this._tEmployeeDetail = default(EntityRef<tEmployeeDetail>);
			this._tTravelRequestStatus = default(EntityRef<tTravelRequestStatus>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestMasterId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TravelRequestMasterId
		{
			get
			{
				return this._TravelRequestMasterId;
			}
			set
			{
				if ((this._TravelRequestMasterId != value))
				{
					this.OnTravelRequestMasterIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestMasterId = value;
					this.SendPropertyChanged("TravelRequestMasterId");
					this.OnTravelRequestMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestNumber", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int RequestNumber
		{
			get
			{
				return this._RequestNumber;
			}
			set
			{
				if ((this._RequestNumber != value))
				{
					this.OnRequestNumberChanging(value);
					this.SendPropertyChanging();
					this._RequestNumber = value;
					this.SendPropertyChanged("RequestNumber");
					this.OnRequestNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeDetailsId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid EmployeeDetailsId
		{
			get
			{
				return this._EmployeeDetailsId;
			}
			set
			{
				if ((this._EmployeeDetailsId != value))
				{
					if (this._tEmployeeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnEmployeeDetailsIdChanging(value);
					this.SendPropertyChanging();
					this._EmployeeDetailsId = value;
					this.SendPropertyChanged("EmployeeDetailsId");
					this.OnEmployeeDetailsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachmentPath", DbType="VarChar(100)")]
		public string AttachmentPath
		{
			get
			{
				return this._AttachmentPath;
			}
			set
			{
				if ((this._AttachmentPath != value))
				{
					this.OnAttachmentPathChanging(value);
					this.SendPropertyChanging();
					this._AttachmentPath = value;
					this.SendPropertyChanged("AttachmentPath");
					this.OnAttachmentPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestStatusId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TravelRequestStatusId
		{
			get
			{
				return this._TravelRequestStatusId;
			}
			set
			{
				if ((this._TravelRequestStatusId != value))
				{
					if (this._tTravelRequestStatus.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTravelRequestStatusIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestStatusId = value;
					this.SendPropertyChanged("TravelRequestStatusId");
					this.OnTravelRequestStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelRequestMaster_tTravelRequestVersion", Storage="_tTravelRequestVersions", ThisKey="TravelRequestMasterId", OtherKey="TravelRequestMasterId")]
		public EntitySet<tTravelRequestVersion> tTravelRequestVersions
		{
			get
			{
				return this._tTravelRequestVersions;
			}
			set
			{
				this._tTravelRequestVersions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestMaster", Storage="_tEmployeeDetail", ThisKey="EmployeeDetailsId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail
		{
			get
			{
				return this._tEmployeeDetail.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail.Entity = null;
						previousValue.tTravelRequestMasters.Remove(this);
					}
					this._tEmployeeDetail.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestMasters.Add(this);
						this._EmployeeDetailsId = value.EmployeeDetailsId;
					}
					else
					{
						this._EmployeeDetailsId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelRequestStatus_tTravelRequestMaster", Storage="_tTravelRequestStatus", ThisKey="TravelRequestStatusId", OtherKey="TravelRequestStatusId", IsForeignKey=true)]
		public tTravelRequestStatus tTravelRequestStatus
		{
			get
			{
				return this._tTravelRequestStatus.Entity;
			}
			set
			{
				tTravelRequestStatus previousValue = this._tTravelRequestStatus.Entity;
				if (((previousValue != value) 
							|| (this._tTravelRequestStatus.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tTravelRequestStatus.Entity = null;
						previousValue.tTravelRequestMasters.Remove(this);
					}
					this._tTravelRequestStatus.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestMasters.Add(this);
						this._TravelRequestStatusId = value.TravelRequestStatusId;
					}
					else
					{
						this._TravelRequestStatusId = default(System.Guid);
					}
					this.SendPropertyChanged("tTravelRequestStatus");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tTravelRequestVersions(tTravelRequestVersion entity)
		{
			this.SendPropertyChanging();
			entity.tTravelRequestMaster = this;
		}
		
		private void detach_tTravelRequestVersions(tTravelRequestVersion entity)
		{
			this.SendPropertyChanging();
			entity.tTravelRequestMaster = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTravelRequestStatus")]
	public partial class tTravelRequestStatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TravelRequestStatusId;
		
		private string _TravelRequestName;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tTravelRequestMaster> _tTravelRequestMasters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelRequestStatusIdChanging(System.Guid value);
    partial void OnTravelRequestStatusIdChanged();
    partial void OnTravelRequestNameChanging(string value);
    partial void OnTravelRequestNameChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tTravelRequestStatus()
		{
			this._tTravelRequestMasters = new EntitySet<tTravelRequestMaster>(new Action<tTravelRequestMaster>(this.attach_tTravelRequestMasters), new Action<tTravelRequestMaster>(this.detach_tTravelRequestMasters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestStatusId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TravelRequestStatusId
		{
			get
			{
				return this._TravelRequestStatusId;
			}
			set
			{
				if ((this._TravelRequestStatusId != value))
				{
					this.OnTravelRequestStatusIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestStatusId = value;
					this.SendPropertyChanged("TravelRequestStatusId");
					this.OnTravelRequestStatusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TravelRequestName
		{
			get
			{
				return this._TravelRequestName;
			}
			set
			{
				if ((this._TravelRequestName != value))
				{
					this.OnTravelRequestNameChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestName = value;
					this.SendPropertyChanged("TravelRequestName");
					this.OnTravelRequestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelRequestStatus_tTravelRequestMaster", Storage="_tTravelRequestMasters", ThisKey="TravelRequestStatusId", OtherKey="TravelRequestStatusId")]
		public EntitySet<tTravelRequestMaster> tTravelRequestMasters
		{
			get
			{
				return this._tTravelRequestMasters;
			}
			set
			{
				this._tTravelRequestMasters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tTravelRequestMasters(tTravelRequestMaster entity)
		{
			this.SendPropertyChanging();
			entity.tTravelRequestStatus = this;
		}
		
		private void detach_tTravelRequestMasters(tTravelRequestMaster entity)
		{
			this.SendPropertyChanging();
			entity.tTravelRequestStatus = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tTravelRequestVersion")]
	public partial class tTravelRequestVersion : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _TravelRequestVersionId;
		
		private System.Guid _TravelRequestMasterId;
		
		private System.Guid _TravelApproverId;
		
		private int _ApproverOrder;
		
		private System.DateTime _ActionDate;
		
		private EntitySet<tTravelRequestComment> _tTravelRequestComments;
		
		private EntityRef<tTravelRequestMaster> _tTravelRequestMaster;
		
		private EntityRef<tEmployeeDetail> _tEmployeeDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTravelRequestVersionIdChanging(System.Guid value);
    partial void OnTravelRequestVersionIdChanged();
    partial void OnTravelRequestMasterIdChanging(System.Guid value);
    partial void OnTravelRequestMasterIdChanged();
    partial void OnTravelApproverIdChanging(System.Guid value);
    partial void OnTravelApproverIdChanged();
    partial void OnApproverOrderChanging(int value);
    partial void OnApproverOrderChanged();
    partial void OnActionDateChanging(System.DateTime value);
    partial void OnActionDateChanged();
    #endregion
		
		public tTravelRequestVersion()
		{
			this._tTravelRequestComments = new EntitySet<tTravelRequestComment>(new Action<tTravelRequestComment>(this.attach_tTravelRequestComments), new Action<tTravelRequestComment>(this.detach_tTravelRequestComments));
			this._tTravelRequestMaster = default(EntityRef<tTravelRequestMaster>);
			this._tEmployeeDetail = default(EntityRef<tEmployeeDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestVersionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid TravelRequestVersionId
		{
			get
			{
				return this._TravelRequestVersionId;
			}
			set
			{
				if ((this._TravelRequestVersionId != value))
				{
					this.OnTravelRequestVersionIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestVersionId = value;
					this.SendPropertyChanged("TravelRequestVersionId");
					this.OnTravelRequestVersionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelRequestMasterId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TravelRequestMasterId
		{
			get
			{
				return this._TravelRequestMasterId;
			}
			set
			{
				if ((this._TravelRequestMasterId != value))
				{
					if (this._tTravelRequestMaster.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTravelRequestMasterIdChanging(value);
					this.SendPropertyChanging();
					this._TravelRequestMasterId = value;
					this.SendPropertyChanged("TravelRequestMasterId");
					this.OnTravelRequestMasterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelApproverId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid TravelApproverId
		{
			get
			{
				return this._TravelApproverId;
			}
			set
			{
				if ((this._TravelApproverId != value))
				{
					if (this._tEmployeeDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTravelApproverIdChanging(value);
					this.SendPropertyChanging();
					this._TravelApproverId = value;
					this.SendPropertyChanged("TravelApproverId");
					this.OnTravelApproverIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApproverOrder", DbType="Int NOT NULL")]
		public int ApproverOrder
		{
			get
			{
				return this._ApproverOrder;
			}
			set
			{
				if ((this._ApproverOrder != value))
				{
					this.OnApproverOrderChanging(value);
					this.SendPropertyChanging();
					this._ApproverOrder = value;
					this.SendPropertyChanged("ApproverOrder");
					this.OnApproverOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionDate", DbType="DateTime NOT NULL")]
		public System.DateTime ActionDate
		{
			get
			{
				return this._ActionDate;
			}
			set
			{
				if ((this._ActionDate != value))
				{
					this.OnActionDateChanging(value);
					this.SendPropertyChanging();
					this._ActionDate = value;
					this.SendPropertyChanged("ActionDate");
					this.OnActionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelRequestVersion_tTravelRequestComment", Storage="_tTravelRequestComments", ThisKey="TravelRequestVersionId", OtherKey="TravelRequestVersionId")]
		public EntitySet<tTravelRequestComment> tTravelRequestComments
		{
			get
			{
				return this._tTravelRequestComments;
			}
			set
			{
				this._tTravelRequestComments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tTravelRequestMaster_tTravelRequestVersion", Storage="_tTravelRequestMaster", ThisKey="TravelRequestMasterId", OtherKey="TravelRequestMasterId", IsForeignKey=true)]
		public tTravelRequestMaster tTravelRequestMaster
		{
			get
			{
				return this._tTravelRequestMaster.Entity;
			}
			set
			{
				tTravelRequestMaster previousValue = this._tTravelRequestMaster.Entity;
				if (((previousValue != value) 
							|| (this._tTravelRequestMaster.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tTravelRequestMaster.Entity = null;
						previousValue.tTravelRequestVersions.Remove(this);
					}
					this._tTravelRequestMaster.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestVersions.Add(this);
						this._TravelRequestMasterId = value.TravelRequestMasterId;
					}
					else
					{
						this._TravelRequestMasterId = default(System.Guid);
					}
					this.SendPropertyChanged("tTravelRequestMaster");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tEmployeeDetail_tTravelRequestVersion", Storage="_tEmployeeDetail", ThisKey="TravelApproverId", OtherKey="EmployeeDetailsId", IsForeignKey=true)]
		public tEmployeeDetail tEmployeeDetail
		{
			get
			{
				return this._tEmployeeDetail.Entity;
			}
			set
			{
				tEmployeeDetail previousValue = this._tEmployeeDetail.Entity;
				if (((previousValue != value) 
							|| (this._tEmployeeDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tEmployeeDetail.Entity = null;
						previousValue.tTravelRequestVersions.Remove(this);
					}
					this._tEmployeeDetail.Entity = value;
					if ((value != null))
					{
						value.tTravelRequestVersions.Add(this);
						this._TravelApproverId = value.EmployeeDetailsId;
					}
					else
					{
						this._TravelApproverId = default(System.Guid);
					}
					this.SendPropertyChanged("tEmployeeDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tTravelRequestComments(tTravelRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.tTravelRequestVersion = this;
		}
		
		private void detach_tTravelRequestComments(tTravelRequestComment entity)
		{
			this.SendPropertyChanging();
			entity.tTravelRequestVersion = null;
		}
	}
}
#pragma warning restore 1591
